import{z as i}from"zod";import{WalletAddress as t}from"./core.mjs";import"bs58";import"libphonenumber-js/max";import"viem";const n=i.enum(["bridge","bridge-sandbox"]),r=i.object({provider:n}),e=i.union([i.object({status:i.literal("completed")}),i.object({status:i.literal("incomplete"),url:i.string()})]),a=i.enum(["not_found","active","awaiting_questionnaire","awaiting_ubo","incomplete","not_started","offboarded","paused","rejected","under_review"]),o=i.object({provider:n}),s=i.object({user_id:i.string(),provider_user_id:i.string().optional(),status:a}),m=i.object({street_line_1:i.string().trim().min(1),street_line_2:i.string().trim().min(1).optional(),city:i.string().trim().min(1),subdivision:i.string().trim().min(1).max(3),postal_code:i.string().trim().min(1).optional(),country:i.string().trim().min(3).max(3)}),_=i.object({type:i.string(),issuing_country:i.string().trim().min(3).max(3),number:i.string().optional(),description:i.string().optional(),expiration:i.string().optional(),image_front:i.string().optional(),image_back:i.string().optional()}),c=i.object({purposes:i.array(i.string().trim().min(1)).min(1),file:i.string().trim().min(1),description:i.string().trim().min(1).optional()}),l=i.object({regulated_activities_description:i.string().trim().min(1),primary_regulatory_authority_country:i.string().trim().min(1),primary_regulatory_authority_name:i.string().trim().min(1),license_number:i.string().trim().min(1)}),d=i.object({first_name:i.string().trim().min(1).max(1024),last_name:i.string().trim().min(1).max(1024),email:i.string().trim().min(1).max(1024).email(),residential_address:m,birth_date:i.string().trim().min(10).max(10),has_ownership:i.boolean(),has_control:i.boolean(),is_signer:i.boolean(),identifying_information:i.array(_).min(1),middle_name:i.string().trim().min(1).max(1024).optional(),transliterated_first_name:i.string().trim().min(1).max(256).optional(),transliterated_middle_name:i.string().trim().min(1).max(256).optional(),transliterated_last_name:i.string().trim().min(1).max(256).optional(),phone:i.string().trim().min(2).max(18).startsWith("+").optional(),transliterated_residential_address:m.optional(),is_director:i.boolean().optional(),title:i.string().trim().min(1).max(1024).optional(),ownership_percentage:i.number().int().optional(),relationship_established_at:i.string().trim().min(10).max(10).optional(),nationality:i.string().min(3).max(3).optional(),verified_selfie_at:i.string().optional(),completed_customer_safety_check_at:i.string().optional(),documents:i.array(c).optional()}),p=i.object({market_identifier_code:i.string().trim().min(1),stock_number:i.string().trim(),ticket:i.string().trim()}),g=i.object({type:i.literal("individual"),first_name:i.string().trim().min(1).max(1024),last_name:i.string().trim().min(1).max(1024),email:i.string().trim().min(1).max(1024).email(),residential_address:m,birth_date:i.string().trim().min(10).max(10),identifying_information:i.array(_).min(1),signed_agreement_id:i.string().trim().min(1).max(1024).optional(),middle_name:i.string().trim().min(1).max(1024).optional(),transliterated_first_name:i.string().trim().min(1).max(256).optional(),transliterated_middle_name:i.string().trim().min(1).max(256).optional(),transliterated_last_name:i.string().trim().min(1).max(256).optional(),phone:i.string().trim().min(2).max(18).startsWith("+").optional(),transliterated_residential_address:m.optional(),endorsements:i.array(i.string()).optional(),account_purpose:i.string().optional(),account_purpose_other:i.string().optional(),employment_status:i.string().optional(),expected_monthly_payments_usd:i.string().optional(),acting_as_intermediary:i.string().optional(),most_recent_occupation:i.string().optional(),source_of_funds:i.string().optional(),nationality:i.string().min(3).max(3).optional(),verified_selfie_at:i.string().optional(),completed_customer_safety_check_at:i.string().optional(),documents:i.array(c).optional(),has_signed_terms_of_service:i.boolean().optional()}),u=i.discriminatedUnion("provider",[i.object({provider:i.literal("bridge"),data:g}),i.object({provider:i.literal("bridge-sandbox"),data:g})]),b=i.object({user_id:i.string(),provider_user_id:i.string().optional(),status:a}),y=i.enum(["usd","eur"]),f=i.object({provider:n}),x=i.object({accounts:i.array(i.object({id:i.string(),bank_name:i.string().optional(),currency:i.string(),account_type:i.string(),last_4:i.string().optional()}))}),j=i.object({street_line_1:i.string().trim().min(1),street_line_2:i.string().trim().min(1).optional(),city:i.string().trim().min(1),postal_code:i.string().trim().min(1).optional(),country:i.string().trim().min(3).max(3),state:i.string().trim().min(1).max(3).optional()}),h=i.object({account_number:i.string().trim().min(1),routing_number:i.string().trim().min(9).max(9),checking_or_savings:i.enum(["checking","savings"]).optional()}),v=i.object({account_number:i.string().trim().min(1),bic:i.string().trim().min(1),country:i.string().trim().min(3).max(3)}),k=i.object({address:j,category:i.enum(["client","parent_company","subsidiary","supplier"]),purpose_of_funds:i.array(i.enum(["intra_group_transfer","invoice_for_goods_and_services"])).min(1),short_business_description:i.string().trim().min(1),account:v}),w=i.object({provider:n,account_owner_name:i.string().trim().min(3).max(256),bank_name:i.string().trim().min(3).max(256).optional(),currency:y,iban:v.optional(),account:h.optional(),swift:k.optional(),address:j.optional(),first_name:i.string().trim().min(1).max(1024).optional(),last_name:i.string().trim().min(1).max(1024).optional()}).superRefine(((t,n)=>{t.account||t.iban||t.swift||n.addIssue({code:i.ZodIssueCode.custom,message:"At least one of account, iban, or swift is required"}),!t.iban||t.first_name&&t.last_name||n.addIssue({code:i.ZodIssueCode.custom,message:"first_name and last_name are required when iban is provided"})})),I=i.object({id:i.string(),bank_name:i.string().optional(),currency:i.string(),account_type:i.string(),last_4:i.string().optional()}),q=i.enum(["sepa","ach_push","wire"]),C=i.enum(["ethereum","base","arbitrum","polygon","optimism"]),W=i.enum(["usdc"]),Z=i.enum(["awaiting_funds","in_review","funds_received","payment_submitted","payment_processed","canceled","error","undeliverable","returned","refunded"]),z=i.object({amount:i.string().trim().min(1),provider:n,source:i.object({payment_rail:q,currency:y}),destination:i.object({chain:C,currency:W,to_address:t})}),A=i.object({id:i.string(),status:Z,deposit_instructions:i.object({amount:i.string(),currency:y,payment_rail:q,deposit_message:i.string().optional(),bank_name:i.string().optional(),bank_account_number:i.string().optional(),bank_routing_number:i.string().optional(),bank_beneficiary_name:i.string().optional(),bank_address:i.string().optional(),iban:i.string().optional(),bic:i.string().optional(),account_holder_name:i.string().optional()})}),R=i.object({amount:i.string().trim().min(1),provider:n,source:i.object({currency:W,chain:C,from_address:t}),destination:i.object({currency:y,payment_rail:q,external_account_id:i.string().uuid()})}),U=i.object({id:i.string(),status:Z,deposit_instructions:i.object({amount:i.string(),currency:W,chain:C,to_address:i.string(),from_address:i.string()})});export{d as BridgeBusinessAssociatedPerson,m as BridgeKycAddress,g as BridgeKycData,c as BridgeKycDocument,_ as BridgeKycIdentifyingInformation,l as BridgeRegulatedActivity,p as BridgeTradedListings,j as FiatAccountAddress,v as FiatAccountIbanData,k as FiatAccountSwiftData,h as FiatAccountUsAccountData,y as FiatCurrency,q as FiatPaymentRail,f as GetOnrampFiatAccountStatusInput,x as GetOnrampFiatAccountsResponse,o as GetOnrampKycStatusInput,s as GetOnrampKycStatusResponse,r as GetOnrampTermsOfServiceStatusInput,R as OfframpInput,U as OfframpResponse,W as OnrampAsset,C as OnrampChain,w as OnrampFiatAccountInput,I as OnrampFiatAccountResponse,z as OnrampInput,u as OnrampKycInput,b as OnrampKycResponse,a as OnrampKycStatus,n as OnrampProvider,A as OnrampResponse,e as OnrampTermsOfServiceStatusResponse,Z as OnrampTransferStatus};
