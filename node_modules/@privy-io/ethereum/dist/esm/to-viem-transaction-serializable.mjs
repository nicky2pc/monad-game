import{isHex as e,toHex as a}from"viem";let r={0:"legacy",1:"eip2930",2:"eip1559",3:"eip4844",4:"eip7702"};const i={legacy:0,eip2930:1,eip1559:2,eip4844:3,eip7702:4};let s=e=>void 0!==e?BigInt(e):void 0;function t(i){let t,{type:c=2,...o}="string"==typeof i?JSON.parse(i):i;o.accessList&&Array.isArray(o.accessList)?t=o.accessList.map((e=>Array.isArray(e)?{address:e[0],storageKeys:e[1]}:e)):o.accessList&&(t=Object.entries(o.accessList).map((e=>({address:e[0],storageKeys:e[1]}))));let d=Number(o.chainId??1),n=e(o.data)?o.data:o.data?a(Uint8Array.from(o.data)):void 0,p=o.nonce?Number(o.nonce):void 0,m={chainId:d,data:n,nonce:p,value:s(o.value),gas:s(o.gas??o.gasLimit)},y=Number(c);if(0===y)return{...o,type:r[y],...m,gasPrice:s(o.gasPrice),accessList:void 0,maxFeePerGas:void 0,maxPriorityFeePerGas:void 0};if(1===y)return{...o,type:r[y],...m,gasPrice:s(o.gasPrice),accessList:t,maxFeePerGas:void 0,maxPriorityFeePerGas:void 0};if(2===y)return{...o,type:r[y],...m,nonce:p,accessList:t,maxFeePerGas:s(o.maxFeePerGas),maxPriorityFeePerGas:s(o.maxPriorityFeePerGas),gasPrice:void 0,maxFeePerBlobGas:void 0};throw Error(`Unsupported transaction type: ${c}`)}export{i as STRING_TO_NUMBER_TXN_TYPE,t as toViemTransactionSerializable};
