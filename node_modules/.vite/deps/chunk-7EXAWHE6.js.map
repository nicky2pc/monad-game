{
  "version": 3,
  "sources": ["../../@farcaster/frame-core/esm/actions/AddFrame.js", "../../@farcaster/frame-core/esm/errors.js", "../../@farcaster/frame-core/esm/actions/ComposeCast.js", "../../@farcaster/frame-core/esm/actions/Ready.js", "../../@farcaster/frame-core/esm/actions/SignIn.js", "../../@farcaster/frame-core/esm/actions/Swap.js", "../../@farcaster/frame-core/esm/actions/ViewProfile.js", "../../@farcaster/frame-core/esm/actions/ViewToken.js", "../../@farcaster/frame-core/esm/wallet/ethereum.js", "../../@farcaster/frame-core/esm/context.js", "../../@farcaster/frame-core/esm/manifest.js", "../../@farcaster/frame-core/esm/schemas/shared.js", "../../@farcaster/frame-core/esm/schemas/embeds.js", "../../@farcaster/frame-core/esm/schemas/notifications.js", "../../@farcaster/frame-core/esm/schemas/events.js", "../../@farcaster/frame-core/esm/schemas/manifest.js", "../../comlink/src/comlink.ts", "../../@farcaster/frame-sdk/dist/endpoint.js", "../../@farcaster/frame-sdk/dist/frameHost.js", "../../ox/core/version.ts", "../../ox/core/internal/errors.ts", "../../ox/core/Errors.ts", "../../ox/core/RpcResponse.ts", "../../ox/core/Provider.ts", "../../ox/core/RpcRequest.ts", "../../@farcaster/frame-sdk/dist/provider.js", "../../@farcaster/frame-sdk/dist/sdk.js", "../../@farcaster/frame-sdk/dist/index.js"],
  "sourcesContent": ["import * as Errors from '../errors';\n/**\n * Thrown when the frame does not have a valid domain manifest.\n */\nexport class InvalidDomainManifest extends Errors.BaseError {\n    name = 'AddFrame.InvalidDomainManifest';\n    constructor() {\n        super('Invalid domain manifest');\n    }\n}\n/**\n * Thrown when add frame action was rejected by the user.\n */\nexport class RejectedByUser extends Errors.BaseError {\n    name = 'AddFrame.RejectedByUser';\n    constructor() {\n        super('Add frame rejected by user');\n    }\n}\n", "export class BaseError extends Error {\n    name = 'BaseError';\n    cause;\n    constructor(message, options = {}) {\n        super(message, options.cause ? { cause: options.cause } : undefined);\n        this.cause = options.cause;\n    }\n}\n", "export {};\n", "export const DEFAULT_READY_OPTIONS = {\n    disableNativeGestures: false,\n};\n", "import * as Errors from '../errors';\n/**\n * Thrown when a sign in action was rejected.\n */\nexport class RejectedByUser extends Errors.BaseError {\n    name = 'SignIn.RejectedByUser';\n    constructor() {\n        super('Sign in rejected by user');\n    }\n}\n", "export {};\n", "export {};\n", "export {};\n", "export {};\n", "export {};\n", "export {};\n", "import { z } from 'zod';\nconst SPECIAL_CHARS_PATTERN = /[@#$%^&*+=\\/\\\\|~«»]/;\nconst REPEATED_PUNCTUATION_PATTERN = /(!{2,}|\\?{2,}|-{2,})/;\n// Unicode ranges for emoji detection:\n// \\u{1F300}-\\u{1F9FF} - Miscellaneous Symbols, Pictographs, Emoticons, Transport, Map, and Supplemental\n// \\u{2702}-\\u{27B0} - Dingbats\n// \\u{2600}-\\u{26FF} - Miscellaneous Symbols\n// \\u{2B00}-\\u{2BFF} - Miscellaneous Symbols and Arrows\nconst EMOJI_PATTERN = /[\\u{1F300}-\\u{1F9FF}]|[\\u{2702}-\\u{27B0}]|[\\u{2600}-\\u{26FF}]|[\\u{2B00}-\\u{2BFF}]/u;\nexport const createSimpleStringSchema = ({ max, noSpaces, } = {}) => {\n    const stringValidations = noSpaces\n        ? z\n            .string()\n            .max(max ?? Number.POSITIVE_INFINITY)\n            .regex(/^\\S*$/, 'Spaces are not allowed')\n        : z.string().max(max ?? Number.POSITIVE_INFINITY);\n    return stringValidations\n        .refine((value) => !EMOJI_PATTERN.test(value), {\n        message: 'Emojis and symbols are not allowed',\n    })\n        .refine((value) => !SPECIAL_CHARS_PATTERN.test(value), {\n        message: 'Special characters (@, #, $, %, ^, &, *, +, =, /, \\\\, |, ~, «, ») are not allowed',\n    })\n        .refine((value) => !REPEATED_PUNCTUATION_PATTERN.test(value), {\n        message: 'Repeated punctuations (!!, ??, --) are not allowed',\n    });\n};\nexport const secureUrlSchema = z\n    .string()\n    .url()\n    .startsWith('https://', { message: 'Must be an https url' })\n    .max(1024);\nexport const frameNameSchema = z.string().max(32);\nexport const buttonTitleSchema = z.string().max(32);\nconst CAIP_19_REGEX = /^[-a-z0-9]{3,8}:[-_a-zA-Z0-9]{1,32}\\/(?:[-a-z0-9]{3,8}:[-.%a-zA-Z0-9]{1,128}(?:\\/[-.%a-zA-Z0-9]{1,78})?|native)$/;\nexport const caip19TokenSchema = z\n    .string()\n    .regex(CAIP_19_REGEX, { message: 'Invalid CAIP-19 asset ID' });\nexport const hexColorSchema = z\n    .string()\n    .regex(/^#([0-9A-F]{3}|[0-9A-F]{6})$/i, {\n    message: 'Invalid hex color code. It should be in the format #RRGGBB or #RGB.',\n});\nexport const aspectRatioSchema = z.union([z.literal('1:1'), z.literal('3:2')]);\nexport const encodedJsonFarcasterSignatureSchema = z.object({\n    header: z.string(),\n    payload: z.string(),\n    signature: z.string(),\n});\nexport const jsonFarcasterSignatureHeaderSchema = z.object({\n    fid: z.number(),\n    type: z.literal('app_key'),\n    key: z.string().startsWith('0x'),\n});\n", "import { z } from 'zod';\nimport { aspectRatioSchema, buttonTitleSchema, caip19TokenSchema, frameNameSchema, hexColorSchema, secureUrlSchema, } from './shared';\nexport const actionLaunchFrameSchema = z.object({\n    type: z.literal('launch_frame'),\n    name: frameNameSchema,\n    url: secureUrlSchema.optional(),\n    splashImageUrl: secureUrlSchema.optional(),\n    splashBackgroundColor: hexColorSchema.optional(),\n});\nexport const actionViewTokenSchema = z.object({\n    type: z.literal('view_token'),\n    token: caip19TokenSchema,\n});\nexport const actionSchema = z.discriminatedUnion('type', [\n    actionLaunchFrameSchema,\n    actionViewTokenSchema,\n]);\nexport const buttonSchema = z.object({\n    title: buttonTitleSchema,\n    action: actionSchema,\n});\nexport const frameEmbedNextSchema = z.object({\n    version: z.literal('next'),\n    imageUrl: secureUrlSchema,\n    aspectRatio: aspectRatioSchema.optional(),\n    button: buttonSchema,\n});\nexport const safeParseFrameEmbed = (rawResponse) => frameEmbedNextSchema.safeParse(rawResponse);\n", "import { z } from 'zod';\nimport { secureUrlSchema } from './shared';\nexport const notificationDetailsSchema = z.object({\n    url: z.string(),\n    token: z.string(),\n});\nexport const sendNotificationRequestSchema = z.object({\n    notificationId: z.string().max(128),\n    title: z.string().max(32),\n    body: z.string().max(128),\n    targetUrl: secureUrlSchema,\n    tokens: z.string().array().max(100),\n});\nexport const sendNotificationResponseSchema = z.object({\n    result: z.object({\n        successfulTokens: z.array(z.string()),\n        invalidTokens: z.array(z.string()),\n        rateLimitedTokens: z.array(z.string()),\n    }),\n});\n", "import { z } from 'zod';\nimport { notificationDetailsSchema } from './notifications';\nexport const eventFrameAddedSchema = z.object({\n    event: z.literal('frame_added'),\n    notificationDetails: notificationDetailsSchema.optional(),\n});\nexport const eventFrameRemovedSchema = z.object({\n    event: z.literal('frame_removed'),\n});\nexport const eventNotificationsEnabledSchema = z.object({\n    event: z.literal('notifications_enabled'),\n    notificationDetails: notificationDetailsSchema.required(),\n});\nexport const notificationsDisabledSchema = z.object({\n    event: z.literal('notifications_disabled'),\n});\nexport const serverEventSchema = z.discriminatedUnion('event', [\n    eventFrameAddedSchema,\n    eventFrameRemovedSchema,\n    eventNotificationsEnabledSchema,\n    notificationsDisabledSchema,\n]);\n", "import { z } from 'zod';\nimport { buttonTitleSchema, createSimpleStringSchema, encodedJsonFarcasterSignatureSchema, frameNameSchema, hexColorSchema, secureUrlSchema, } from './shared';\nconst primaryCategorySchema = z.enum([\n    'games',\n    'social',\n    'finance',\n    'utility',\n    'productivity',\n    'health-fitness',\n    'news-media',\n    'music',\n    'shopping',\n    'education',\n    'developer-tools',\n    'entertainment',\n    'art-creativity',\n]);\nexport const domainFrameConfigSchema = z.object({\n    // 0.0.0 and 0.0.1 are not technically part of the spec but kept for\n    // backwards compatibilty. next should always resolve to the most recent\n    // schema version.\n    version: z.union([\n        z.literal('0.0.0'),\n        z.literal('0.0.1'),\n        z.literal('1'),\n        z.literal('next'),\n    ]),\n    name: frameNameSchema,\n    iconUrl: secureUrlSchema,\n    homeUrl: secureUrlSchema,\n    /** deprecated, set ogImageUrl instead */\n    imageUrl: secureUrlSchema.optional(),\n    /** deprecated, will rely on fc:frame meta tag */\n    buttonTitle: buttonTitleSchema.optional(),\n    splashImageUrl: secureUrlSchema.optional(),\n    splashBackgroundColor: hexColorSchema.optional(),\n    webhookUrl: secureUrlSchema.optional(),\n    /** see: https://github.com/farcasterxyz/miniapps/discussions/191 */\n    subtitle: createSimpleStringSchema({ max: 30 }).optional(),\n    description: createSimpleStringSchema({ max: 170 }).optional(),\n    screenshotUrls: z.array(secureUrlSchema).max(3).optional(),\n    primaryCategory: primaryCategorySchema.optional(),\n    tags: z\n        .array(createSimpleStringSchema({ max: 20, noSpaces: true }))\n        .max(5)\n        .optional(),\n    heroImageUrl: secureUrlSchema.optional(),\n    tagline: createSimpleStringSchema({ max: 30 }).optional(),\n    ogTitle: createSimpleStringSchema({ max: 30 }).optional(),\n    ogDescription: createSimpleStringSchema({ max: 100 }).optional(),\n    ogImageUrl: secureUrlSchema.optional(),\n    /** see: https://github.com/farcasterxyz/miniapps/discussions/204 */\n    noindex: z.boolean().optional(),\n});\nexport const domainManifestSchema = z.object({\n    accountAssociation: encodedJsonFarcasterSignatureSchema,\n    frame: domainFrameConfigSchema.optional(),\n});\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport type { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nexport const finalizer = Symbol(\"Comlink.finalizer\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\ntype PendingListenersMap = Map<\n  string,\n  (value: WireValue | PromiseLike<WireValue>) => void\n>;\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nfunction isAllowedOrigin(\n  allowedOrigins: (string | RegExp)[],\n  origin: string\n): boolean {\n  for (const allowedOrigin of allowedOrigins) {\n    if (origin === allowedOrigin || allowedOrigin === \"*\") {\n      return true;\n    }\n    if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function expose(\n  obj: any,\n  ep: Endpoint = globalThis as any,\n  allowedOrigins: (string | RegExp)[] = [\"*\"]\n) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n      console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n          if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n            obj[finalizer]();\n          }\n        }\n      })\n      .catch((error) => {\n        // Send Serialization Error To Caller\n        const [wireValue, transferables] = toWireValue({\n          value: new TypeError(\"Unserializable return value\"),\n          [throwMarker]: 0,\n        });\n        ep.postMessage({ ...wireValue, id }, transferables);\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  const pendingListeners : PendingListenersMap = new Map();\n\n  ep.addEventListener(\"message\", function handleMessage(ev: Event) {\n    const { data } = ev as MessageEvent;\n    if (!data || !data.id) {\n      return;\n    }\n    const resolver = pendingListeners.get(data.id);\n    if (!resolver) {\n      return;\n    }\n\n    try {\n      resolver(data);\n    } finally {\n      pendingListeners.delete(data.id);\n    }\n  });\n\n  return createProxy<T>(ep, pendingListeners, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction releaseEndpoint(ep: Endpoint) {\n  return requestResponseMessage(ep, new Map(), {\n    type: MessageType.RELEASE,\n  }).then(() => {\n    closeEndPoint(ep);\n  });\n}\n\ninterface FinalizationRegistry<T> {\n  new (cb: (heldValue: T) => void): FinalizationRegistry<T>;\n  register(\n    weakItem: object,\n    heldValue: T,\n    unregisterToken?: object | undefined\n  ): void;\n  unregister(unregisterToken: object): void;\n}\ndeclare var FinalizationRegistry: FinalizationRegistry<Endpoint>;\n\nconst proxyCounter = new WeakMap<Endpoint, number>();\nconst proxyFinalizers =\n  \"FinalizationRegistry\" in globalThis &&\n  new FinalizationRegistry((ep: Endpoint) => {\n    const newCount = (proxyCounter.get(ep) || 0) - 1;\n    proxyCounter.set(ep, newCount);\n    if (newCount === 0) {\n      releaseEndpoint(ep);\n    }\n  });\n\nfunction registerProxy(proxy: object, ep: Endpoint) {\n  const newCount = (proxyCounter.get(ep) || 0) + 1;\n  proxyCounter.set(ep, newCount);\n  if (proxyFinalizers) {\n    proxyFinalizers.register(proxy, ep, proxy);\n  }\n}\n\nfunction unregisterProxy(proxy: object) {\n  if (proxyFinalizers) {\n    proxyFinalizers.unregister(proxy);\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  pendingListeners: PendingListenersMap,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          unregisterProxy(proxy);\n          releaseEndpoint(ep);\n          pendingListeners.clear();\n          isProxyReleased = true;\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, pendingListeners, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, pendingListeners, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        pendingListeners,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, pendingListeners, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, pendingListeners, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        pendingListeners,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        pendingListeners,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  registerProxy(proxy, ep);\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T extends {}>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = globalThis,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  pendingListeners: PendingListenersMap,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    pendingListeners.set(id, resolve);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n});\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n", "import { windowEndpoint } from 'comlink';\nconst mockEndpoint = {\n    postMessage() {\n        // noop\n    },\n    addEventListener: () => {\n        // noop\n    },\n    removeEventListener: () => {\n        // noop\n    },\n};\nconst webViewEndpoint = {\n    postMessage: (data) => {\n        console.debug('[webview:req]', data);\n        window.ReactNativeWebView.postMessage(JSON.stringify(data));\n    },\n    addEventListener: (_, listener, ...args) => {\n        document.addEventListener('FarcasterFrameCallback', listener, ...args);\n    },\n    removeEventListener: (_, listener) => {\n        document.removeEventListener('FarcasterFrameCallback', listener);\n    },\n};\nexport const endpoint = (() => {\n    // No actions are actually gonna take place during SSR, thus it's safe to return mocked endpoint\n    if (typeof window === 'undefined')\n        return mockEndpoint;\n    return window?.ReactNativeWebView\n        ? webViewEndpoint\n        : windowEndpoint(window?.parent ?? window);\n})();\n", "import { wrap } from 'comlink';\nimport { endpoint } from './endpoint';\nexport const frameHost = wrap(endpoint);\n", "/** @internal */\nexport const version = '0.1.1'\n", "import { version } from '../version.js'\n\n/** @internal */\nexport function getUrl(url: string) {\n  return url\n}\n\n/** @internal */\nexport function getVersion() {\n  return version\n}\n\n/** @internal */\nexport function prettyPrint(args: unknown) {\n  if (!args) return ''\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n", "import { getVersion } from './internal/errors.js'\n\nexport type GlobalErrorType<name extends string = 'Error'> = Error & {\n  name: name\n}\n\n/**\n * Base error class inherited by all errors thrown by ox.\n *\n * @example\n * ```ts\n * import { Errors } from 'ox'\n * throw new Errors.BaseError('An error occurred')\n * ```\n */\nexport class BaseError<\n  cause extends Error | undefined = undefined,\n> extends Error {\n  details: string\n  docs?: string | undefined\n  docsPath?: string | undefined\n  shortMessage: string\n\n  override cause: cause\n  override name = 'BaseError'\n\n  version = `ox@${getVersion()}`\n\n  constructor(shortMessage: string, options: BaseError.Options<cause> = {}) {\n    const details = (() => {\n      if (options.cause instanceof BaseError) {\n        if (options.cause.details) return options.cause.details\n        if (options.cause.shortMessage) return options.cause.shortMessage\n      }\n      if (options.cause?.message) return options.cause.message\n      return options.details!\n    })()\n    const docsPath = (() => {\n      if (options.cause instanceof BaseError)\n        return options.cause.docsPath || options.docsPath\n      return options.docsPath\n    })()\n\n    const docsBaseUrl = 'https://oxlib.sh'\n    const docs = `${docsBaseUrl}${docsPath ?? ''}`\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      ...(options.metaMessages ? ['', ...options.metaMessages] : []),\n      ...(details || docsPath\n        ? [\n            '',\n            details ? `Details: ${details}` : undefined,\n            docsPath ? `See: ${docs}` : undefined,\n          ]\n        : []),\n    ]\n      .filter((x) => typeof x === 'string')\n      .join('\\n')\n\n    super(message, options.cause ? { cause: options.cause } : undefined)\n\n    this.cause = options.cause as any\n    this.details = details\n    this.docs = docs\n    this.docsPath = docsPath\n    this.shortMessage = shortMessage\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nexport declare namespace BaseError {\n  type Options<cause extends Error | undefined = Error | undefined> = {\n    cause?: cause | undefined\n    details?: string | undefined\n    docsPath?: string | undefined\n    metaMessages?: (string | undefined)[] | undefined\n  }\n}\n\n/** @internal */\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (err && typeof err === 'object' && 'cause' in err && err.cause)\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n", "import type { Errors, RpcRequest } from '../index.js'\nimport type {\n  Compute,\n  IsNarrowable,\n  OneOf,\n  UnionPartialBy,\n} from './internal/types.js'\n\n/** A JSON-RPC response object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#request_object). */\nexport type RpcResponse<\n  result = unknown,\n  error extends ErrorObject = ErrorObject,\n> = Compute<\n  {\n    id: number\n    jsonrpc: '2.0'\n  } & OneOf<{ result: result } | { error: error }>\n>\n\n/** JSON-RPC error object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#error_object). */\nexport type ErrorObject = {\n  code: number\n  message: string\n  data?: unknown | undefined\n}\n\n/**\n * A type-safe interface to instantiate a JSON-RPC response object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#response_object).\n *\n * @example\n * ### Instantiating a Response Object\n *\n * ```ts twoslash\n * import { RpcResponse } from 'ox'\n *\n * const response = RpcResponse.from({\n *   id: 0,\n *   jsonrpc: '2.0',\n *   result: '0x69420',\n * })\n * ```\n *\n * @example\n * ### Type-safe Instantiation\n *\n * If you have a JSON-RPC request object, you can use it to strongly-type the response. If a `request` is provided,\n * then the `id` and `jsonrpc` properties will be overridden with the values from the request.\n *\n * ```ts twoslash\n * import { RpcRequest, RpcResponse } from 'ox'\n *\n * const request = RpcRequest.from({ id: 0, method: 'eth_blockNumber' })\n *\n * const response = RpcResponse.from(\n *   { result: '0x69420' },\n *   { request },\n * )\n * ```\n *\n * @param response - Opaque JSON-RPC response object.\n * @param options - Parsing options.\n * @returns Typed JSON-RPC result, or response object (if `raw` is `true`).\n */\nexport function from<\n  request extends RpcRequest.RpcRequest | undefined = undefined,\n  const response =\n    | (request extends RpcRequest.RpcRequest\n        ? request['_returnType']\n        : RpcResponse)\n    | unknown,\n>(\n  response: from.Response<request, response>,\n  options?: from.Options<request>,\n): Compute<from.ReturnType<response>>\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function from(response: RpcResponse, options: any = {}): RpcResponse {\n  const { request } = options\n  return {\n    ...response,\n    id: response.id ?? request?.id,\n    jsonrpc: response.jsonrpc ?? request.jsonrpc,\n  }\n}\n\nexport declare namespace from {\n  type Response<\n    request extends RpcRequest.RpcRequest | undefined = undefined,\n    response = unknown,\n  > = response &\n    (request extends RpcRequest.RpcRequest\n      ? UnionPartialBy<RpcResponse<request['_returnType']>, 'id' | 'jsonrpc'>\n      : RpcResponse)\n\n  type Options<\n    request extends RpcRequest.RpcRequest | undefined =\n      | RpcRequest.RpcRequest\n      | undefined,\n  > = {\n    request?: request | RpcRequest.RpcRequest | undefined\n  }\n\n  type ReturnType<response> = IsNarrowable<response, RpcResponse> extends true\n    ? RpcResponse\n    : response & Readonly<{ id: number; jsonrpc: '2.0' }>\n}\n\n/**\n * A type-safe interface to parse a JSON-RPC response object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#response_object), and extract the result.\n *\n * @example\n * ```ts twoslash\n * import { RpcRequest, RpcResponse } from 'ox'\n *\n * // 1. Create a request store.\n * const store = RpcRequest.createStore()\n *\n * // 2. Get a request object.\n * const request = store.prepare({\n *   method: 'eth_getBlockByNumber',\n *   params: ['0x1', false],\n * })\n *\n * // 3. Send the JSON-RPC request via HTTP.\n * const block = await fetch('https://1.rpc.thirdweb.com', {\n *   body: JSON.stringify(request),\n *   headers: {\n *     'Content-Type': 'application/json',\n *   },\n *   method: 'POST',\n * })\n *  .then((response) => response.json())\n *  // 4. Parse the JSON-RPC response into a type-safe result. // [!code focus]\n *  .then((response) => RpcResponse.parse(response, { request })) // [!code focus]\n *\n * block // [!code focus]\n * // ^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * :::tip\n *\n * If you don't need the return type, you can omit the options entirely.\n *\n * ```ts twoslash\n * // @noErrors\n * import { RpcResponse } from 'ox'\n *\n * const block = await fetch('https://1.rpc.thirdweb.com', {})\n *  .then((response) => response.json())\n *  .then((response) => RpcResponse.parse(response, { request })) // [!code --]\n *  .then(RpcResponse.parse) // [!code ++]\n * ```\n * :::\n *\n * @example\n * ### Raw Mode\n *\n * If `raw` is `true`, the response will be returned as an object with `result` and `error` properties instead of returning the `result` directly and throwing errors.\n *\n * ```ts twoslash\n * import { RpcRequest, RpcResponse } from 'ox'\n *\n * const store = RpcRequest.createStore()\n *\n * const request = store.prepare({\n *   method: 'eth_blockNumber',\n * })\n *\n * const response = RpcResponse.parse({}, {\n *   request,\n *   raw: true, // [!code hl]\n * })\n *\n * response.result\n * //       ^?\n *\n *\n * response.error\n * //       ^?\n *\n *\n * ```\n *\n * @param response - Opaque JSON-RPC response object.\n * @param options - Parsing options.\n * @returns Typed JSON-RPC result, or response object (if `raw` is `true`).\n */\nexport function parse<\n  const response extends RpcResponse | unknown,\n  returnType,\n  raw extends boolean = false,\n>(\n  response: response,\n  options: parse.Options<returnType, raw> = {},\n): parse.ReturnType<\n  unknown extends response\n    ? returnType\n    : response extends RpcResponse\n      ? response extends { result: infer result }\n        ? result\n        : never\n      : returnType,\n  raw\n> {\n  const { raw = false } = options\n  const response_ = response as RpcResponse\n  if (raw) return response as never\n  if (response_.error) {\n    const { code } = response_.error\n    const JsonRpcError = (() => {\n      if (code === InternalError.code) return InternalError\n      if (code === InvalidInputError.code) return InvalidInputError\n      if (code === InvalidParamsError.code) return InvalidParamsError\n      if (code === InvalidRequestError.code) return InvalidRequestError\n      if (code === LimitExceededError.code) return LimitExceededError\n      if (code === MethodNotFoundError.code) return MethodNotFoundError\n      if (code === MethodNotSupportedError.code) return MethodNotSupportedError\n      if (code === ParseError.code) return ParseError\n      if (code === ResourceNotFoundError.code) return ResourceNotFoundError\n      if (code === ResourceUnavailableError.code)\n        return ResourceUnavailableError\n      if (code === TransactionRejectedError.code)\n        return TransactionRejectedError\n      if (code === VersionNotSupportedError.code)\n        return VersionNotSupportedError\n      return BaseError\n    })()\n    throw new JsonRpcError(response_.error)\n  }\n  return response_.result as never\n}\n\nexport declare namespace parse {\n  type Options<returnType, raw extends boolean = false> = {\n    /**\n     * JSON-RPC Method that was used to make the request. Used for typing the response.\n     */\n    request?:\n      | {\n          _returnType: returnType\n        }\n      | RpcRequest.RpcRequest\n      | undefined\n    /**\n     * Enables raw mode – responses will return an object with `result` and `error` properties instead of returning the `result` directly and throwing errors.\n     *\n     * - `true`: a JSON-RPC response object will be returned with `result` and `error` properties.\n     * - `false`: the JSON-RPC response object's `result` property will be returned directly, and JSON-RPC Errors will be thrown.\n     *\n     * @default false\n     */\n    raw?: raw | boolean | undefined\n  }\n\n  type ReturnType<returnType, raw extends boolean = false> = Compute<\n    raw extends true ? RpcResponse<returnType> : returnType\n  >\n\n  type ErrorType =\n    | ParseError\n    | InvalidInputError\n    | ResourceNotFoundError\n    | ResourceUnavailableError\n    | TransactionRejectedError\n    | MethodNotSupportedError\n    | LimitExceededError\n    | VersionNotSupportedError\n    | InvalidRequestError\n    | MethodNotFoundError\n    | InvalidParamsError\n    | InternalError\n    | BaseErrorType\n    | Errors.GlobalErrorType\n}\n\nexport type BaseErrorType = BaseError & { name: 'BaseError' }\n\n/** Thrown when a JSON-RPC error has occurred. */\nexport class BaseError extends Error {\n  override name = 'RpcResponse.BaseError'\n\n  readonly code: number\n  readonly data?: unknown | undefined\n\n  constructor(errorObject: ErrorObject) {\n    const { code, message, data } = errorObject\n    super(message)\n    this.code = code\n    this.data = data\n  }\n}\n\n/** Thrown when the input to a JSON-RPC method is invalid. */\nexport class InvalidInputError extends BaseError {\n  static readonly code = -32000\n  override readonly code = -32000\n  override readonly name = 'RpcResponse.InvalidInputError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Missing or invalid parameters.',\n      ...parameters,\n      code: InvalidInputError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC resource is not found. */\nexport class ResourceNotFoundError extends BaseError {\n  static readonly code = -32001\n  override readonly code = -32001\n  override readonly name = 'RpcResponse.ResourceNotFoundError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Requested resource not found.',\n      ...parameters,\n      code: ResourceNotFoundError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC resource is unavailable. */\nexport class ResourceUnavailableError extends BaseError {\n  static readonly code = -32002\n  override readonly code = -32002\n  override readonly name = 'RpcResponse.ResourceUnavailableError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Requested resource not available.',\n      ...parameters,\n      code: ResourceUnavailableError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC transaction is rejected. */\nexport class TransactionRejectedError extends BaseError {\n  static readonly code = -32003\n  override readonly code = -32003\n  override readonly name = 'RpcResponse.TransactionRejectedError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Transaction creation failed.',\n      ...parameters,\n      code: TransactionRejectedError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC method is not supported. */\nexport class MethodNotSupportedError extends BaseError {\n  static readonly code = -32004\n  override readonly code = -32004\n  override readonly name = 'RpcResponse.MethodNotSupportedError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Method is not implemented.',\n      ...parameters,\n      code: MethodNotSupportedError.code,\n    })\n  }\n}\n\n/** Thrown when a rate-limit is exceeded. */\nexport class LimitExceededError extends BaseError {\n  static readonly code = -32005\n  override readonly code = -32005\n  override readonly name = 'RpcResponse.LimitExceededError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Rate limit exceeded.',\n      ...parameters,\n      code: LimitExceededError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC version is not supported. */\nexport class VersionNotSupportedError extends BaseError {\n  static readonly code = -32006\n  override readonly code = -32006\n  override readonly name = 'RpcResponse.VersionNotSupportedError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'JSON-RPC version not supported.',\n      ...parameters,\n      code: VersionNotSupportedError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC request is invalid. */\nexport class InvalidRequestError extends BaseError {\n  static readonly code = -32600\n  override readonly code = -32600\n  override readonly name = 'RpcResponse.InvalidRequestError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Input is not a valid JSON-RPC request.',\n      ...parameters,\n      code: InvalidRequestError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC method is not found. */\nexport class MethodNotFoundError extends BaseError {\n  static readonly code = -32601\n  override readonly code = -32601\n  override readonly name = 'RpcResponse.MethodNotFoundError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Method does not exist.',\n      ...parameters,\n      code: MethodNotFoundError.code,\n    })\n  }\n}\n\n/** Thrown when the parameters to a JSON-RPC method are invalid. */\nexport class InvalidParamsError extends BaseError {\n  static readonly code = -32602\n  override readonly code = -32602\n  override readonly name = 'RpcResponse.InvalidParamsError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Invalid method parameters.',\n      ...parameters,\n      code: InvalidParamsError.code,\n    })\n  }\n}\n\n/** Thrown when an internal JSON-RPC error has occurred. */\nexport class InternalError extends BaseError {\n  static readonly code = -32603\n  override readonly code = -32603\n  override readonly name = 'RpcResponse.InternalErrorError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Internal JSON-RPC error.',\n      ...parameters,\n      code: InternalError.code,\n    })\n  }\n}\n\n/** Thrown when a JSON-RPC response is invalid. */\nexport class ParseError extends BaseError {\n  static readonly code = -32700\n  override readonly code = -32700\n  override readonly name = 'RpcResponse.ParseError'\n\n  constructor(parameters: Partial<Omit<ErrorObject, 'code'>> = {}) {\n    super({\n      message: 'Failed to parse JSON-RPC response.',\n      ...parameters,\n      code: ParseError.code,\n    })\n  }\n}\n", "import { EventEmitter } from 'eventemitter3'\nimport type * as Address from './Address.js'\nimport * as Errors from './Errors.js'\nimport * as RpcResponse from './RpcResponse.js'\nimport type * as RpcSchema from './RpcSchema.js'\nimport type * as RpcSchema_internal from './internal/rpcSchema.js'\nimport type { Compute } from './internal/types.js'\n\n/** Options for a {@link ox#Provider.Provider}. */\nexport type Options = {\n  /**\n   * Whether to include event functions (`on`, `removeListener`) on the Provider.\n   *\n   * @default true\n   */\n  includeEvents?: boolean | undefined\n  /**\n   * RPC Schema to use for the Provider's `request` function.\n   * See {@link ox#RpcSchema.(from:function)} for more.\n   *\n   * @default `RpcSchema.Generic`\n   */\n  schema?: RpcSchema.Generic | undefined\n}\n\n/** Root type for an EIP-1193 Provider. */\nexport type Provider<\n  options extends Options | undefined = undefined,\n  ///\n  _schema extends RpcSchema.Generic = options extends {\n    schema: infer schema extends RpcSchema.Generic\n  }\n    ? schema\n    : RpcSchema.Default,\n> = Compute<\n  {\n    request: RequestFn<_schema>\n  } & (options extends { includeEvents: true } | undefined\n    ? {\n        on: EventListenerFn\n        removeListener: EventListenerFn\n      }\n    : {})\n>\n\n/** Type for an EIP-1193 Provider's event emitter. */\nexport type Emitter = Compute<EventEmitter<EventMap>>\n\n/** EIP-1193 Provider's `request` function. */\nexport type RequestFn<schema extends RpcSchema.Generic = RpcSchema.Generic> = <\n  methodName extends RpcSchema.MethodNameGeneric,\n>(\n  parameters: RpcSchema_internal.ExtractRequestOpaque<schema, methodName>,\n) => Promise<RpcSchema.ExtractReturnType<schema, methodName>>\n\n/** Type for an EIP-1193 Provider's event listener functions (`on`, `removeListener`, etc). */\nexport type EventListenerFn = <event extends keyof EventMap>(\n  event: event,\n  listener: EventMap[event],\n) => void\n\nexport type ConnectInfo = {\n  chainId: string\n}\n\nexport type Message = {\n  type: string\n  data: unknown\n}\n\nexport class ProviderRpcError extends Error {\n  override name = 'ProviderRpcError'\n\n  code: number\n  details: string\n\n  constructor(code: number, message: string) {\n    super(message)\n    this.code = code\n    this.details = message\n  }\n}\n\nexport type EventMap = {\n  accountsChanged: (accounts: readonly Address.Address[]) => void\n  chainChanged: (chainId: string) => void\n  connect: (connectInfo: ConnectInfo) => void\n  disconnect: (error: ProviderRpcError) => void\n  message: (message: Message) => void\n}\n\n/** The user rejected the request. */\nexport class UserRejectedRequestError extends ProviderRpcError {\n  static readonly code = 4001\n  override readonly name = 'Provider.UserRejectedRequestError'\n\n  constructor({\n    message = 'The user rejected the request.',\n  }: { message?: string | undefined } = {}) {\n    super(4001, message)\n  }\n}\n\n/** The requested method and/or account has not been authorized by the user. */\nexport class UnauthorizedError extends ProviderRpcError {\n  static readonly code = 4100\n  override readonly name = 'Provider.UnauthorizedError'\n\n  constructor({\n    message = 'The requested method and/or account has not been authorized by the user.',\n  }: { message?: string | undefined } = {}) {\n    super(4100, message)\n  }\n}\n\n/** The provider does not support the requested method. */\nexport class UnsupportedMethodError extends ProviderRpcError {\n  static readonly code = 4200\n  override readonly name = 'Provider.UnsupportedMethodError'\n\n  constructor({\n    message = 'The provider does not support the requested method.',\n  }: { message?: string | undefined } = {}) {\n    super(4200, message)\n  }\n}\n\n/** The provider is disconnected from all chains. */\nexport class DisconnectedError extends ProviderRpcError {\n  static readonly code = 4900\n  override readonly name = 'Provider.DisconnectedError'\n\n  constructor({\n    message = 'The provider is disconnected from all chains.',\n  }: { message?: string | undefined } = {}) {\n    super(4900, message)\n  }\n}\n\n/** The provider is not connected to the requested chain. */\nexport class ChainDisconnectedError extends ProviderRpcError {\n  static readonly code = 4901\n  override readonly name = 'Provider.ChainDisconnectedError'\n\n  constructor({\n    message = 'The provider is not connected to the requested chain.',\n  }: { message?: string | undefined } = {}) {\n    super(4901, message)\n  }\n}\n\n/**\n * Creates an EIP-1193 flavored event emitter to be injected onto a Provider.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Provider, RpcRequest, RpcResponse } from 'ox' // [!code focus]\n *\n * // 1. Instantiate a Provider Emitter. // [!code focus]\n * const emitter = Provider.createEmitter() // [!code focus]\n *\n * const store = RpcRequest.createStore()\n *\n * const provider = Provider.from({\n *   // 2. Pass the Emitter to the Provider. // [!code focus]\n *   ...emitter, // [!code focus]\n *   async request(args) {\n *     return await fetch('https://1.rpc.thirdweb.com', {\n *       body: JSON.stringify(store.prepare(args)),\n *       method: 'POST',\n *       headers: {\n *         'Content-Type': 'application/json',\n *       },\n *     })\n *       .then((res) => res.json())\n *       .then(RpcResponse.parse)\n *   },\n * })\n *\n * // 3. Emit Provider Events. // [!code focus]\n * emitter.emit('accountsChanged', ['0x...']) // [!code focus]\n * ```\n *\n * @returns An event emitter.\n */\nexport function createEmitter(): Emitter {\n  const emitter = new EventEmitter<EventMap>()\n\n  return {\n    get eventNames() {\n      return emitter.eventNames.bind(emitter)\n    },\n    get listenerCount() {\n      return emitter.listenerCount.bind(emitter)\n    },\n    get listeners() {\n      return emitter.listeners.bind(emitter)\n    },\n    addListener: emitter.addListener.bind(emitter),\n    emit: emitter.emit.bind(emitter),\n    off: emitter.off.bind(emitter),\n    on: emitter.on.bind(emitter),\n    once: emitter.once.bind(emitter),\n    removeAllListeners: emitter.removeAllListeners.bind(emitter),\n    removeListener: emitter.removeListener.bind(emitter),\n  }\n}\n\nexport declare namespace createEmitter {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Instantiates an [EIP-1193](https://eips.ethereum.org/EIPS/eip-1193) {@link ox#Provider.Provider}\n * from an arbitrary [EIP-1193 Provider](https://eips.ethereum.org/EIPS/eip-1193) interface.\n *\n * @example\n * ### Instantiating with RPC Transport\n *\n * Ox's {@link ox#RpcTransport} is EIP-1193 compliant, and can be used to instantiate an EIP-1193 Provider. This means you can use any HTTP RPC endpoint as an EIP-1193 Provider.\n *\n * ```ts twoslash\n * import { Provider, RpcTransport } from 'ox'\n *\n * const transport = RpcTransport.fromHttp('https://1.rpc.thirdweb.com')\n * const provider = Provider.from(transport)\n * ```\n *\n * @example\n * ### Instantiating with External Providers\n *\n * The example below demonstrates how we can instantiate a typed EIP-1193 Provider from an\n * external EIP-1193 Provider like `window.ethereum`.\n *\n * ```ts twoslash\n * import 'ox/window'\n * import { Provider } from 'ox'\n *\n * const provider = Provider.from(window.ethereum)\n *\n * const blockNumber = await provider.request({ method: 'eth_blockNumber' })\n * ```\n *\n * :::tip\n *\n * There are also libraries that distribute EIP-1193 Provider objects that you can use with `Provider.from`:\n *\n * - [`@walletconnect/ethereum-provider`](https://www.npmjs.com/package/\\@walletconnect/ethereum-provider)\n *\n * - [`@coinbase/wallet-sdk`](https://www.npmjs.com/package/\\@coinbase/wallet-sdk)\n *\n * - [`@metamask/detect-provider`](https://www.npmjs.com/package/\\@metamask/detect-provider)\n *\n * - [`@safe-global/safe-apps-provider`](https://github.com/safe-global/safe-apps-sdk/tree/main/packages/safe-apps-provider)\n *\n * - [`mipd`](https://github.com/wevm/mipd): EIP-6963 Multi Injected Providers\n *\n * :::\n *\n * @example\n * ### Instantiating a Custom Provider\n *\n * The example below demonstrates how we can instantiate a typed EIP-1193 Provider from a\n * HTTP `fetch` JSON-RPC request. You can use this pattern to integrate with any asynchronous JSON-RPC\n * transport, including WebSockets and IPC.\n *\n * ```ts twoslash\n * // @noErrors\n * import { Provider, RpcRequest, RpcResponse } from 'ox'\n *\n * const store = RpcRequest.createStore()\n *\n * const provider = Provider.from({\n *   async request(args) {\n *     return await fetch('https://1.rpc.thirdweb.com', {\n *       body: JSON.stringify(store.prepare(args)),\n *       method: 'POST',\n *       headers: {\n *         'Content-Type': 'application/json',\n *       },\n *     })\n *       .then((res) => res.json())\n *       .then(RpcResponse.parse)\n *   },\n * })\n *\n * const blockNumber = await provider.request({ method: 'eth_blockNumber' })\n * ```\n *\n * @example\n * ### Type-safe Custom Schemas\n *\n * It is possible to define your own type-safe schema by using the {@link ox#RpcSchema.(from:function)} type.\n *\n * ```ts twoslash\n * // @noErrors\n * import 'ox/window'\n * import { Provider, RpcSchema } from 'ox'\n *\n * const schema = RpcSchema.from<\n *   | RpcSchema.Default\n *   | {\n *       Request: {\n *         method: 'abe_foo',\n *         params: [id: number],\n *       }\n *       ReturnType: string\n *     }\n *   | {\n *       Request: {\n *         method: 'abe_bar',\n *         params: [id: string],\n *       }\n *       ReturnType: string\n *     }\n * >()\n *\n * const provider = Provider.from(window.ethereum, { schema })\n *\n * const blockNumber = await provider.request({ method: 'e' })\n * //                                                    ^|\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Instantiating a Provider with Events\n *\n * The example below demonstrates how to instantiate a Provider with your own EIP-1193 flavored event emitter.\n *\n * This example is useful for Wallets that distribute an EIP-1193 Provider (e.g. webpage injection via `window.ethereum`).\n *\n * ```ts twoslash\n * // @noErrors\n * import { Provider, RpcRequest, RpcResponse } from 'ox'\n *\n * // 1. Instantiate a Provider Emitter.\n * const emitter = Provider.createEmitter() // [!code ++]\n *\n * const store = RpcRequest.createStore()\n *\n * const provider = Provider.from({\n *   // 2. Pass the Emitter to the Provider.\n *   ...emitter, // [!code ++]\n *   async request(args) {\n *     return await fetch('https://1.rpc.thirdweb.com', {\n *       body: JSON.stringify(store.prepare(args)),\n *       method: 'POST',\n *       headers: {\n *         'Content-Type': 'application/json',\n *       },\n *     })\n *       .then((res) => res.json())\n *       .then(RpcResponse.parse)\n *   },\n * })\n *\n * // 3. Emit Provider Events.\n * emitter.emit('accountsChanged', ['0x...']) // [!code ++]\n * ```\n *\n * @param provider - The EIP-1193 provider to convert.\n * @returns An typed EIP-1193 Provider.\n */\nexport function from<\n  const provider extends Provider | unknown,\n  options extends Options | undefined = undefined,\n>(\n  provider: provider | Provider<{ schema: RpcSchema.Generic }>,\n  options?: options | Options,\n): Provider<options>\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function from(provider: any, options: Options = {}): Provider<Options> {\n  const { includeEvents = true } = options\n  if (!provider) throw new IsUndefinedError()\n  return {\n    ...(includeEvents\n      ? {\n          on: provider.on?.bind(provider),\n          removeListener: provider.removeListener?.bind(provider),\n        }\n      : {}),\n    async request(args) {\n      const result = await provider.request(args)\n      if (\n        result &&\n        typeof result === 'object' &&\n        'jsonrpc' in (result as { jsonrpc?: unknown })\n      )\n        return RpcResponse.parse(result) as never\n      return result\n    },\n  }\n}\n\nexport declare namespace from {\n  type ErrorType = IsUndefinedError | Errors.GlobalErrorType\n}\n\n/** Thrown when the provider is undefined. */\nexport class IsUndefinedError extends Errors.BaseError {\n  override readonly name = 'Provider.IsUndefinedError'\n\n  constructor() {\n    super('`provider` is undefined.')\n  }\n}\n", "import type { Errors } from '../index.js'\nimport type * as RpcSchema from './RpcSchema.js'\nimport type * as RpcSchema_internal from './internal/rpcSchema.js'\nimport type { Compute } from './internal/types.js'\n\n/** A JSON-RPC request object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#request_object). */\nexport type RpcRequest<schema extends RpcSchema.Generic = RpcSchema.Generic> =\n  Compute<\n    schema extends any\n      ? schema['Request'] & {\n          id: number\n          jsonrpc: '2.0'\n          /** @deprecated internal */\n          _returnType: schema['ReturnType']\n        }\n      : never\n  >\n\n/** JSON-RPC request store type. */\nexport type Store<schema extends RpcSchema.Generic = RpcSchema.Default> =\n  Compute<{\n    prepare: <methodName extends RpcSchema.MethodNameGeneric>(\n      parameters: Compute<\n        RpcSchema_internal.ExtractRequestOpaque<schema, methodName>\n      >,\n    ) => Compute<RpcRequest<RpcSchema.ExtractItem<schema, methodName>>>\n    readonly id: number\n  }>\n\n/**\n * Creates a JSON-RPC request store to build requests with an incrementing `id`.\n *\n * Returns a type-safe `prepare` function to build a JSON-RPC request object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#request_object).\n *\n * @example\n * ```ts twoslash\n * import { RpcRequest } from 'ox'\n *\n * const store = RpcRequest.createStore()\n *\n * const request_1 = store.prepare({\n *   method: 'eth_blockNumber',\n * })\n * // @log: { id: 0, jsonrpc: '2.0', method: 'eth_blockNumber' }\n *\n * const request_2 = store.prepare({\n *   method: 'eth_call',\n *   params: [\n *     {\n *       to: '0x0000000000000000000000000000000000000000',\n *       data: '0xdeadbeef',\n *     },\n *   ],\n * })\n * // @log: { id: 1, jsonrpc: '2.0', method: 'eth_call', params: [{ to: '0x0000000000000000000000000000000000000000', data: '0xdeadbeef' }] }\n * ```\n *\n * @example\n * ### Type-safe Custom Schemas\n *\n * It is possible to define your own type-safe schema by using the {@link ox#RpcSchema.From} type.\n *\n * ```ts twoslash\n * import { RpcSchema, RpcRequest } from 'ox'\n *\n * type Schema = RpcSchema.From<{ // [!code focus]\n *   Request: { // [!code focus]\n *     method: 'eth_foobar' // [!code focus]\n *     params: [number] // [!code focus]\n *   } // [!code focus]\n *   ReturnType: string // [!code focus]\n * } | { // [!code focus]\n *   Request: { // [!code focus]\n *     method: 'eth_foobaz' // [!code focus]\n *     params: [string] // [!code focus]\n *   } // [!code focus]\n *   ReturnType: string // [!code focus]\n * }> // [!code focus]\n *\n * const store = RpcRequest.createStore<Schema>() // [!code focus]\n *\n * const request = store.prepare({\n *   method: 'eth_foobar', // [!code focus]\n *   // ^?\n *   params: [42],\n * })\n * ```\n *\n * @param options - Request store options.\n * @returns The request store\n */\nexport function createStore<\n  schema extends RpcSchema.Generic = RpcSchema.Default,\n>(options: createStore.Options = {}): createStore.ReturnType<schema> {\n  let id = options.id ?? 0\n  return {\n    prepare(options) {\n      return from({\n        id: id++,\n        ...options,\n      } as never) as never\n    },\n    get id() {\n      return id\n    },\n  }\n}\n\nexport declare namespace createStore {\n  type Options = {\n    /** The initial request ID. */\n    id?: number\n  }\n\n  type ReturnType<schema extends RpcSchema.Generic = RpcSchema.Default> =\n    Store<schema>\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * A type-safe interface to build a JSON-RPC request object as per the [JSON-RPC 2.0 specification](https://www.jsonrpc.org/specification#request_object).\n *\n * :::warning\n *\n * You will likely want to use {@link ox#RpcRequest.(createStore:function)} instead as it will also manage `id`s and uses this function internally.\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { RpcRequest, RpcResponse } from 'ox'\n *\n * // 1. Build a request object.\n * const request = RpcRequest.from({ // [!code focus]\n *   id: 0, // [!code focus]\n *   method: 'eth_estimateGas', // [!code focus]\n *   params: [ // [!code focus]\n *     { // [!code focus]\n *       from: '0xd2135CfB216b74109775236E36d4b433F1DF507B', // [!code focus]\n *       to: '0x0D44f617435088c947F00B31160f64b074e412B4', // [!code focus]\n *       value: '0x69420', // [!code focus]\n *     }, // [!code focus]\n *   ], // [!code focus]\n * }) // [!code focus]\n *\n * // 2. Send the JSON-RPC request via HTTP.\n * const gas = await fetch('https://1.rpc.thirdweb.com', {\n *   body: JSON.stringify(request),\n *   headers: {\n *     'Content-Type': 'application/json',\n *   },\n *   method: 'POST',\n * })\n *  .then((response) => response.json())\n *  // 3. Parse the JSON-RPC response into a type-safe result.\n *  .then((response) => RpcResponse.parse(response, { request }))\n * ```\n *\n * @param options - JSON-RPC request options.\n * @returns The fully-formed JSON-RPC request object.\n */\nexport function from<methodName extends RpcSchema.MethodNameGeneric>(\n  options: from.Options<methodName>,\n): from.ReturnType<methodName> {\n  return {\n    ...options,\n    jsonrpc: '2.0',\n  } as never\n}\n\nexport declare namespace from {\n  type Options<methodName extends RpcSchema.MethodNameGeneric> = Compute<\n    RpcSchema_internal.ExtractRequestOpaque<RpcSchema.Default, methodName> & {\n      id: number\n    }\n  >\n\n  type ReturnType<methodName extends RpcSchema.MethodNameGeneric> = Compute<\n    RpcRequest<RpcSchema.ExtractItem<RpcSchema.Default, methodName>>\n  >\n\n  type ErrorType = Errors.GlobalErrorType\n}\n", "import * as Provider from 'ox/Provider';\nimport * as RpcRequest from 'ox/RpcRequest';\nimport * as RpcResponse from 'ox/RpcResponse';\nimport { frameHost } from './frameHost';\nconst emitter = Provider.createEmitter();\nconst store = RpcRequest.createStore();\nfunction toProviderRpcError({ code, details, }) {\n    switch (code) {\n        case 4001:\n            return new Provider.UserRejectedRequestError();\n        case 4100:\n            return new Provider.UnauthorizedError();\n        case 4200:\n            return new Provider.UnsupportedMethodError();\n        case 4900:\n            return new Provider.DisconnectedError();\n        case 4901:\n            return new Provider.ChainDisconnectedError();\n        default:\n            return new Provider.ProviderRpcError(code, details ?? 'Unknown provider RPC error');\n    }\n}\nexport const provider = Provider.from({\n    ...emitter,\n    async request(args) {\n        // @ts-expect-error\n        const request = store.prepare(args);\n        try {\n            const response = await frameHost\n                .ethProviderRequestV2(request)\n                .then((res) => RpcResponse.parse(res, { request, raw: true }));\n            if (response.error) {\n                throw toProviderRpcError(response.error);\n            }\n            return response.result;\n        }\n        catch (e) {\n            // ethProviderRequestV2 not supported, fall back to v1\n            if (e instanceof Error &&\n                e.message.match(/cannot read property 'apply'/i)) {\n                return await frameHost.ethProviderRequest(request);\n            }\n            if (e instanceof Provider.ProviderRpcError ||\n                e instanceof RpcResponse.BaseError) {\n                throw e;\n            }\n            throw new RpcResponse.InternalError({\n                message: e instanceof Error ? e.message : undefined,\n            });\n        }\n    },\n});\nfunction announceProvider(detail) {\n    const event = new CustomEvent('eip6963:announceProvider', { detail: Object.freeze(detail) });\n    window.dispatchEvent(event);\n    const handler = () => window.dispatchEvent(event);\n    window.addEventListener('eip6963:requestProvider', handler);\n    return () => window.removeEventListener('eip6963:requestProvider', handler);\n}\n// Required to pass SSR\nif (typeof document !== 'undefined') {\n    // forward eip6963:requestProvider events to the host\n    document.addEventListener('eip6963:requestProvider', () => {\n        frameHost.eip6963RequestProvider();\n    });\n    // react native webview events\n    document.addEventListener('FarcasterFrameEthProviderEvent', (event) => {\n        if (event instanceof MessageEvent) {\n            const ethProviderEvent = event.data;\n            // @ts-expect-error\n            emitter.emit(ethProviderEvent.event, ...ethProviderEvent.params);\n        }\n    });\n    document.addEventListener('FarcasterFrameEvent', (event) => {\n        if (event instanceof MessageEvent) {\n            const frameEvent = event.data;\n            if (frameEvent.event === 'eip6963:announceProvider') {\n                announceProvider({\n                    info: frameEvent.info,\n                    provider: provider,\n                });\n            }\n        }\n    });\n}\n// Required to pass SSR\nif (typeof window !== 'undefined') {\n    // forward eip6963:requestProvider events to the host\n    window.addEventListener('eip6963:requestProvider', () => {\n        frameHost.eip6963RequestProvider();\n    });\n    // web events\n    window.addEventListener('message', (event) => {\n        if (event instanceof MessageEvent) {\n            if (event.data.type === 'frameEthProviderEvent') {\n                const ethProviderEvent = event.data;\n                // @ts-expect-error\n                emitter.emit(ethProviderEvent.event, ...ethProviderEvent.params);\n            }\n        }\n    });\n    window.addEventListener('message', (event) => {\n        if (event instanceof MessageEvent) {\n            if (event.data.type === 'frameEvent') {\n                const frameEvent = event.data.event;\n                if (frameEvent.event === 'eip6963:announceProvider') {\n                    announceProvider({\n                        info: frameEvent.info,\n                        provider: provider,\n                    });\n                }\n            }\n        }\n    });\n}\n", "import { AddFrame, SignIn } from '@farcaster/frame-core';\nimport { EventEmitter } from 'eventemitter3';\nimport { frameHost } from './frameHost';\nimport { provider } from './provider';\nexport function createEmitter() {\n    const emitter = new EventEmitter();\n    return {\n        get eventNames() {\n            return emitter.eventNames.bind(emitter);\n        },\n        get listenerCount() {\n            return emitter.listenerCount.bind(emitter);\n        },\n        get listeners() {\n            return emitter.listeners.bind(emitter);\n        },\n        addListener: emitter.addListener.bind(emitter),\n        emit: emitter.emit.bind(emitter),\n        off: emitter.off.bind(emitter),\n        on: emitter.on.bind(emitter),\n        once: emitter.once.bind(emitter),\n        removeAllListeners: emitter.removeAllListeners.bind(emitter),\n        removeListener: emitter.removeListener.bind(emitter),\n    };\n}\nconst emitter = createEmitter();\nexport const sdk = {\n    ...emitter,\n    context: frameHost.context,\n    actions: {\n        setPrimaryButton: frameHost.setPrimaryButton.bind(frameHost),\n        ready: frameHost.ready.bind(frameHost),\n        close: frameHost.close.bind(frameHost),\n        viewProfile: frameHost.viewProfile.bind(frameHost),\n        viewToken: frameHost.viewToken.bind(frameHost),\n        swap: frameHost.swap.bind(frameHost),\n        signIn: async (options) => {\n            const response = await frameHost.signIn(options);\n            if (response.result) {\n                return response.result;\n            }\n            if (response.error.type === 'rejected_by_user') {\n                throw new SignIn.RejectedByUser();\n            }\n            throw new Error('Unreachable');\n        },\n        openUrl: (urlArg) => {\n            const url = typeof urlArg === 'string' ? urlArg : urlArg.url;\n            return frameHost.openUrl(url.trim());\n        },\n        addFrame: async () => {\n            const response = await frameHost.addFrame();\n            if (response.result) {\n                return response.result;\n            }\n            if (response.error.type === 'invalid_domain_manifest') {\n                throw new AddFrame.InvalidDomainManifest();\n            }\n            if (response.error.type === 'rejected_by_user') {\n                throw new AddFrame.RejectedByUser();\n            }\n            throw new Error('Unreachable');\n        },\n        composeCast(options = {}) {\n            return frameHost.composeCast(options);\n        },\n    },\n    wallet: {\n        ethProvider: provider,\n    },\n};\n// Required to pass SSR\nif (typeof document !== 'undefined') {\n    // react native webview events\n    document.addEventListener('FarcasterFrameEvent', (event) => {\n        if (event instanceof MessageEvent) {\n            const frameEvent = event.data;\n            if (frameEvent.event === 'primary_button_clicked') {\n                emitter.emit('primaryButtonClicked');\n            }\n            else if (frameEvent.event === 'frame_added') {\n                emitter.emit('frameAdded', {\n                    notificationDetails: frameEvent.notificationDetails,\n                });\n            }\n            else if (frameEvent.event === 'frame_add_rejected') {\n                emitter.emit('frameAddRejected', { reason: frameEvent.reason });\n            }\n            else if (frameEvent.event === 'frame_removed') {\n                emitter.emit('frameRemoved');\n            }\n            else if (frameEvent.event === 'notifications_enabled') {\n                emitter.emit('notificationsEnabled', {\n                    notificationDetails: frameEvent.notificationDetails,\n                });\n            }\n            else if (frameEvent.event === 'notifications_disabled') {\n                emitter.emit('notificationsDisabled');\n            }\n        }\n    });\n}\n// Required to pass SSR\nif (typeof window !== 'undefined') {\n    // web events\n    window.addEventListener('message', (event) => {\n        if (event instanceof MessageEvent) {\n            if (event.data.type === 'frameEvent') {\n                const frameEvent = event.data.event;\n                if (frameEvent.event === 'primary_button_clicked') {\n                    emitter.emit('primaryButtonClicked');\n                }\n                else if (frameEvent.event === 'frame_added') {\n                    emitter.emit('frameAdded', {\n                        notificationDetails: frameEvent.notificationDetails,\n                    });\n                }\n                else if (frameEvent.event === 'frame_add_rejected') {\n                    emitter.emit('frameAddRejected', { reason: frameEvent.reason });\n                }\n                else if (frameEvent.event === 'frame_removed') {\n                    emitter.emit('frameRemoved');\n                }\n                else if (frameEvent.event === 'notifications_enabled') {\n                    emitter.emit('notificationsEnabled', {\n                        notificationDetails: frameEvent.notificationDetails,\n                    });\n                }\n                else if (frameEvent.event === 'notifications_disabled') {\n                    emitter.emit('notificationsDisabled');\n                }\n            }\n        }\n    });\n}\n", "import { sdk } from './sdk';\nexport * from './sdk';\nexport * from '@farcaster/frame-core';\nexport default sdk;\n"],
  "mappings": "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",
  "names": ["RejectedByUser", "RejectedByUser", "obj", "returnValue", "endpoint", "proxy", "BaseError", "BaseError", "emitter", "EventEmitter", "provider", "BaseError", "options", "from", "BaseError", "createEmitter", "emitter", "EventEmitter"]
}
